/*
* generated by Xtext
*/
grammar InternalDMDL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package jp.hishidama.xtext.dmdl_editor.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jp.hishidama.xtext.dmdl_editor.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jp.hishidama.xtext.dmdl_editor.services.DMDLGrammarAccess;

}

@parser::members {
 
 	private DMDLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DMDLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModels
entryRuleModels 
:
{ before(grammarAccess.getModelsRule()); }
	 ruleModels
{ after(grammarAccess.getModelsRule()); } 
	 EOF 
;

// Rule Models
ruleModels
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelsAccess().getListAssignment()); }
(rule__Models__ListAssignment)*
{ after(grammarAccess.getModelsAccess().getListAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelDefinition
entryRuleModelDefinition 
:
{ before(grammarAccess.getModelDefinitionRule()); }
	 ruleModelDefinition
{ after(grammarAccess.getModelDefinitionRule()); } 
	 EOF 
;

// Rule ModelDefinition
ruleModelDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelDefinitionAccess().getGroup()); }
(rule__ModelDefinition__Group__0)
{ after(grammarAccess.getModelDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordModelDefinition
entryRuleRecordModelDefinition 
:
{ before(grammarAccess.getRecordModelDefinitionRule()); }
	 ruleRecordModelDefinition
{ after(grammarAccess.getRecordModelDefinitionRule()); } 
	 EOF 
;

// Rule RecordModelDefinition
ruleRecordModelDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getGroup()); }
(rule__RecordModelDefinition__Group__0)
{ after(grammarAccess.getRecordModelDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordExpression
entryRuleRecordExpression 
:
{ before(grammarAccess.getRecordExpressionRule()); }
	 ruleRecordExpression
{ after(grammarAccess.getRecordExpressionRule()); } 
	 EOF 
;

// Rule RecordExpression
ruleRecordExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordExpressionAccess().getGroup()); }
(rule__RecordExpression__Group__0)
{ after(grammarAccess.getRecordExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTerm
entryRuleRecordTerm 
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordTermAccess().getAlternatives()); }
(rule__RecordTerm__Alternatives)
{ after(grammarAccess.getRecordTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelReference
entryRuleModelReference 
:
{ before(grammarAccess.getModelReferenceRule()); }
	 ruleModelReference
{ after(grammarAccess.getModelReferenceRule()); } 
	 EOF 
;

// Rule ModelReference
ruleModelReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelReferenceAccess().getNameAssignment()); }
(rule__ModelReference__NameAssignment)
{ after(grammarAccess.getModelReferenceAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition 
:
{ before(grammarAccess.getPropertyDefinitionRule()); }
	 rulePropertyDefinition
{ after(grammarAccess.getPropertyDefinitionRule()); } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
(rule__PropertyDefinition__Group__0)
{ after(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSummarizeModelDefinition
entryRuleSummarizeModelDefinition 
:
{ before(grammarAccess.getSummarizeModelDefinitionRule()); }
	 ruleSummarizeModelDefinition
{ after(grammarAccess.getSummarizeModelDefinitionRule()); } 
	 EOF 
;

// Rule SummarizeModelDefinition
ruleSummarizeModelDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getGroup()); }
(rule__SummarizeModelDefinition__Group__0)
{ after(grammarAccess.getSummarizeModelDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSummarizeExpression
entryRuleSummarizeExpression 
:
{ before(grammarAccess.getSummarizeExpressionRule()); }
	 ruleSummarizeExpression
{ after(grammarAccess.getSummarizeExpressionRule()); } 
	 EOF 
;

// Rule SummarizeExpression
ruleSummarizeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getGroup()); }
(rule__SummarizeExpression__Group__0)
{ after(grammarAccess.getSummarizeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSummarizeTerm
entryRuleSummarizeTerm 
:
{ before(grammarAccess.getSummarizeTermRule()); }
	 ruleSummarizeTerm
{ after(grammarAccess.getSummarizeTermRule()); } 
	 EOF 
;

// Rule SummarizeTerm
ruleSummarizeTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSummarizeTermAccess().getGroup()); }
(rule__SummarizeTerm__Group__0)
{ after(grammarAccess.getSummarizeTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescription
entryRuleDescription 
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getDescriptionAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeList
entryRuleAttributeList 
:
{ before(grammarAccess.getAttributeListRule()); }
	 ruleAttributeList
{ after(grammarAccess.getAttributeListRule()); } 
	 EOF 
;

// Rule AttributeList
ruleAttributeList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAttributeListAccess().getAttributesAssignment()); }
(rule__AttributeList__AttributesAssignment)
{ after(grammarAccess.getAttributeListAccess().getAttributesAssignment()); }
)
(
{ before(grammarAccess.getAttributeListAccess().getAttributesAssignment()); }
(rule__AttributeList__AttributesAssignment)*
{ after(grammarAccess.getAttributeListAccess().getAttributesAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeElementList
entryRuleAttributeElementList 
:
{ before(grammarAccess.getAttributeElementListRule()); }
	 ruleAttributeElementList
{ after(grammarAccess.getAttributeElementListRule()); } 
	 EOF 
;

// Rule AttributeElementList
ruleAttributeElementList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeElementListAccess().getGroup()); }
(rule__AttributeElementList__Group__0)
{ after(grammarAccess.getAttributeElementListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeElement
entryRuleAttributeElement 
:
{ before(grammarAccess.getAttributeElementRule()); }
	 ruleAttributeElement
{ after(grammarAccess.getAttributeElementRule()); } 
	 EOF 
;

// Rule AttributeElement
ruleAttributeElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeElementAccess().getGroup()); }
(rule__AttributeElement__Group__0)
{ after(grammarAccess.getAttributeElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValue
entryRuleAttributeValue 
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueAccess().getAlternatives()); }
(rule__AttributeValue__Alternatives)
{ after(grammarAccess.getAttributeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValueArray
entryRuleAttributeValueArray 
:
{ before(grammarAccess.getAttributeValueArrayRule()); }
	 ruleAttributeValueArray
{ after(grammarAccess.getAttributeValueArrayRule()); } 
	 EOF 
;

// Rule AttributeValueArray
ruleAttributeValueArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getGroup()); }
(rule__AttributeValueArray__Group__0)
{ after(grammarAccess.getAttributeValueArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGrouping
entryRuleGrouping 
:
{ before(grammarAccess.getGroupingRule()); }
	 ruleGrouping
{ after(grammarAccess.getGroupingRule()); } 
	 EOF 
;

// Rule Grouping
ruleGrouping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupingAccess().getGroup()); }
(rule__Grouping__Group__0)
{ after(grammarAccess.getGroupingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelFolding
entryRuleModelFolding 
:
{ before(grammarAccess.getModelFoldingRule()); }
	 ruleModelFolding
{ after(grammarAccess.getModelFoldingRule()); } 
	 EOF 
;

// Rule ModelFolding
ruleModelFolding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelFoldingAccess().getGroup()); }
(rule__ModelFolding__Group__0)
{ after(grammarAccess.getModelFoldingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyFolding
entryRulePropertyFolding 
:
{ before(grammarAccess.getPropertyFoldingRule()); }
	 rulePropertyFolding
{ after(grammarAccess.getPropertyFoldingRule()); } 
	 EOF 
;

// Rule PropertyFolding
rulePropertyFolding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyFoldingAccess().getGroup()); }
(rule__PropertyFolding__Group__0)
{ after(grammarAccess.getPropertyFoldingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getNAME_TOKENTerminalRuleCall()); }
	RULE_NAME_TOKEN
{ after(grammarAccess.getNameAccess().getNAME_TOKENTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BOOLEAN
ruleBOOLEAN
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
(rule__BOOLEAN__Alternatives)
{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ModelDefinition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getModelAssignment_2_0()); }
(rule__ModelDefinition__ModelAssignment_2_0)
{ after(grammarAccess.getModelDefinitionAccess().getModelAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getModelDefinitionAccess().getModelAssignment_2_1()); }
(rule__ModelDefinition__ModelAssignment_2_1)
{ after(grammarAccess.getModelDefinitionAccess().getModelAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getGroup_0()); }
(rule__RecordTerm__Group_0__0)
{ after(grammarAccess.getRecordTermAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRecordTermAccess().getReferenceAssignment_1()); }
(rule__RecordTerm__ReferenceAssignment_1)
{ after(grammarAccess.getRecordTermAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_0()); }
(rule__AttributeValue__ValueAssignment_0)
{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_1()); }
(rule__AttributeValue__ValueAssignment_1)
{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
(rule__AttributeValue__ValueAssignment_2)
{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }

	'->' 

{ after(grammarAccess.getPropertyFoldingAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getPropertyFoldingAccess().getEqualsSignGreaterThanSignKeyword_4_1()); }

	'=>' 

{ after(grammarAccess.getPropertyFoldingAccess().getEqualsSignGreaterThanSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringValueAssignment_0()); }
(rule__Literal__StringValueAssignment_0)
{ after(grammarAccess.getLiteralAccess().getStringValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntValueAssignment_1()); }
(rule__Literal__IntValueAssignment_1)
{ after(grammarAccess.getLiteralAccess().getIntValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDecimalValueAssignment_2()); }
(rule__Literal__DecimalValueAssignment_2)
{ after(grammarAccess.getLiteralAccess().getDecimalValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanValueAssignment_3()); }
(rule__Literal__BooleanValueAssignment_3)
{ after(grammarAccess.getLiteralAccess().getBooleanValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_0()); }
(	'INT' 
)
{ after(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_1()); }
(	'LONG' 
)
{ after(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBYTEEnumLiteralDeclaration_2()); }
(	'BYTE' 
)
{ after(grammarAccess.getTypeAccess().getBYTEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_3()); }
(	'SHORT' 
)
{ after(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDECIMALEnumLiteralDeclaration_4()); }
(	'DECIMAL' 
)
{ after(grammarAccess.getTypeAccess().getDECIMALEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_5()); }
(	'FLOAT' 
)
{ after(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_6()); }
(	'DOUBLE' 
)
{ after(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTEXTEnumLiteralDeclaration_7()); }
(	'TEXT' 
)
{ after(grammarAccess.getTypeAccess().getTEXTEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBOOLEANEnumLiteralDeclaration_8()); }
(	'BOOLEAN' 
)
{ after(grammarAccess.getTypeAccess().getBOOLEANEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDATEEnumLiteralDeclaration_9()); }
(	'DATE' 
)
{ after(grammarAccess.getTypeAccess().getDATEEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDATETIMEEnumLiteralDeclaration_10()); }
(	'DATETIME' 
)
{ after(grammarAccess.getTypeAccess().getDATETIMEEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEANAccess().getTRUEEnumLiteralDeclaration_0()); }
(	'TRUE' 
)
{ after(grammarAccess.getBOOLEANAccess().getTRUEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBOOLEANAccess().getFALSEEnumLiteralDeclaration_1()); }
(	'FALSE' 
)
{ after(grammarAccess.getBOOLEANAccess().getFALSEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ModelDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDefinition__Group__0__Impl
	rule__ModelDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getDescriptionAssignment_0()); }
(rule__ModelDefinition__DescriptionAssignment_0)?
{ after(grammarAccess.getModelDefinitionAccess().getDescriptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDefinition__Group__1__Impl
	rule__ModelDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getAttributesAssignment_1()); }
(rule__ModelDefinition__AttributesAssignment_1)?
{ after(grammarAccess.getModelDefinitionAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDefinition__Group__2__Impl
	rule__ModelDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getAlternatives_2()); }
(rule__ModelDefinition__Alternatives_2)
{ after(grammarAccess.getModelDefinitionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getModelDefinitionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordModelDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordModelDefinition__Group__0__Impl
	rule__RecordModelDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordModelDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getNameAssignment_0()); }
(rule__RecordModelDefinition__NameAssignment_0)
{ after(grammarAccess.getRecordModelDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordModelDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordModelDefinition__Group__1__Impl
	rule__RecordModelDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordModelDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getRecordModelDefinitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordModelDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordModelDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordModelDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getRhsAssignment_2()); }
(rule__RecordModelDefinition__RhsAssignment_2)
{ after(grammarAccess.getRecordModelDefinitionAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group__0__Impl
	rule__RecordExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getTermsAssignment_0()); }
(rule__RecordExpression__TermsAssignment_0)
{ after(grammarAccess.getRecordExpressionAccess().getTermsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getGroup_1()); }
(rule__RecordExpression__Group_1__0)*
{ after(grammarAccess.getRecordExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group_1__0__Impl
	rule__RecordExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getRecordExpressionAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getTermsAssignment_1_1()); }
(rule__RecordExpression__TermsAssignment_1_1)
{ after(grammarAccess.getRecordExpressionAccess().getTermsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTerm__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group_0__0__Impl
	rule__RecordTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getRecordTermAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group_0__1__Impl
	rule__RecordTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordTermAccess().getPropertiesAssignment_0_1()); }
(rule__RecordTerm__PropertiesAssignment_0_1)
{ after(grammarAccess.getRecordTermAccess().getPropertiesAssignment_0_1()); }
)
(
{ before(grammarAccess.getRecordTermAccess().getPropertiesAssignment_0_1()); }
(rule__RecordTerm__PropertiesAssignment_0_1)*
{ after(grammarAccess.getRecordTermAccess().getPropertiesAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getRightCurlyBracketKeyword_0_2()); }

	'}' 

{ after(grammarAccess.getRecordTermAccess().getRightCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__0__Impl
	rule__PropertyDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDescriptionAssignment_0()); }
(rule__PropertyDefinition__DescriptionAssignment_0)?
{ after(grammarAccess.getPropertyDefinitionAccess().getDescriptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__1__Impl
	rule__PropertyDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getAttributesAssignment_1()); }
(rule__PropertyDefinition__AttributesAssignment_1)?
{ after(grammarAccess.getPropertyDefinitionAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__2__Impl
	rule__PropertyDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_2()); }
(rule__PropertyDefinition__NameAssignment_2)
{ after(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__3__Impl
	rule__PropertyDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getPropertyDefinitionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__4__Impl
	rule__PropertyDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getTypeAssignment_4()); }
(rule__PropertyDefinition__TypeAssignment_4)
{ after(grammarAccess.getPropertyDefinitionAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SummarizeModelDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeModelDefinition__Group__0__Impl
	rule__SummarizeModelDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getSummarizedKeyword_0()); }

	'summarized' 

{ after(grammarAccess.getSummarizeModelDefinitionAccess().getSummarizedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeModelDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeModelDefinition__Group__1__Impl
	rule__SummarizeModelDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getNameAssignment_1()); }
(rule__SummarizeModelDefinition__NameAssignment_1)
{ after(grammarAccess.getSummarizeModelDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeModelDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeModelDefinition__Group__2__Impl
	rule__SummarizeModelDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getSummarizeModelDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeModelDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeModelDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getRhsAssignment_3()); }
(rule__SummarizeModelDefinition__RhsAssignment_3)
{ after(grammarAccess.getSummarizeModelDefinitionAccess().getRhsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SummarizeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeExpression__Group__0__Impl
	rule__SummarizeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getTermsAssignment_0()); }
(rule__SummarizeExpression__TermsAssignment_0)
{ after(grammarAccess.getSummarizeExpressionAccess().getTermsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getGroup_1()); }
(rule__SummarizeExpression__Group_1__0)*
{ after(grammarAccess.getSummarizeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SummarizeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeExpression__Group_1__0__Impl
	rule__SummarizeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getSummarizeExpressionAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getTermsAssignment_1_1()); }
(rule__SummarizeExpression__TermsAssignment_1_1)
{ after(grammarAccess.getSummarizeExpressionAccess().getTermsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SummarizeTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeTerm__Group__0__Impl
	rule__SummarizeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getReferenceAssignment_0()); }
(rule__SummarizeTerm__ReferenceAssignment_0)
{ after(grammarAccess.getSummarizeTermAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeTerm__Group__1__Impl
	rule__SummarizeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getFoldingAssignment_1()); }
(rule__SummarizeTerm__FoldingAssignment_1)
{ after(grammarAccess.getSummarizeTermAccess().getFoldingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummarizeTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummarizeTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getGroupingAssignment_2()); }
(rule__SummarizeTerm__GroupingAssignment_2)?
{ after(grammarAccess.getSummarizeTermAccess().getGroupingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAttributeAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_2()); }
(rule__Attribute__Group_2__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__0__Impl
	rule__Attribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__1__Impl
	rule__Attribute__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_2_1()); }
(rule__Attribute__Group_2_1__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAttributeAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2_1__0__Impl
	rule__Attribute__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getElementsAssignment_2_1_0()); }
(rule__Attribute__ElementsAssignment_2_1_0)
{ after(grammarAccess.getAttributeAccess().getElementsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommaKeyword_2_1_1()); }
(
	',' 
)?
{ after(grammarAccess.getAttributeAccess().getCommaKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeElementList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElementList__Group__0__Impl
	rule__AttributeElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getElementsAssignment_0()); }
(rule__AttributeElementList__ElementsAssignment_0)
{ after(grammarAccess.getAttributeElementListAccess().getElementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeElementList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getGroup_1()); }
(rule__AttributeElementList__Group_1__0)*
{ after(grammarAccess.getAttributeElementListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeElementList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElementList__Group_1__0__Impl
	rule__AttributeElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getAttributeElementListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeElementList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getElementsAssignment_1_1()); }
(rule__AttributeElementList__ElementsAssignment_1_1)
{ after(grammarAccess.getAttributeElementListAccess().getElementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElement__Group__0__Impl
	rule__AttributeElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementAccess().getNameAssignment_0()); }
(rule__AttributeElement__NameAssignment_0)
{ after(grammarAccess.getAttributeElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElement__Group__1__Impl
	rule__AttributeElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAttributeElementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementAccess().getValueAssignment_2()); }
(rule__AttributeElement__ValueAssignment_2)
{ after(grammarAccess.getAttributeElementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeValueArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group__0__Impl
	rule__AttributeValueArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getAttributeValueArrayAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group__1__Impl
	rule__AttributeValueArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getElementsAssignment_1()); }
(rule__AttributeValueArray__ElementsAssignment_1)
{ after(grammarAccess.getAttributeValueArrayAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group__2__Impl
	rule__AttributeValueArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getGroup_2()); }
(rule__AttributeValueArray__Group_2__0)*
{ after(grammarAccess.getAttributeValueArrayAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueArray__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group__3__Impl
	rule__AttributeValueArray__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getCommaKeyword_3()); }
(
	',' 
)?
{ after(grammarAccess.getAttributeValueArrayAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueArray__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAttributeValueArrayAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AttributeValueArray__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group_2__0__Impl
	rule__AttributeValueArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAttributeValueArrayAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueArray__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getElementsAssignment_2_1()); }
(rule__AttributeValueArray__ElementsAssignment_2_1)
{ after(grammarAccess.getAttributeValueArrayAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Grouping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grouping__Group__0__Impl
	rule__Grouping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getPercentSignKeyword_0()); }

	'%' 

{ after(grammarAccess.getGroupingAccess().getPercentSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grouping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grouping__Group__1__Impl
	rule__Grouping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getNameAssignment_1()); }
(rule__Grouping__NameAssignment_1)
{ after(grammarAccess.getGroupingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grouping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grouping__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getGroup_2()); }
(rule__Grouping__Group_2__0)*
{ after(grammarAccess.getGroupingAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Grouping__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grouping__Group_2__0__Impl
	rule__Grouping__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getGroupingAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grouping__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grouping__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getNameAssignment_2_1()); }
(rule__Grouping__NameAssignment_2_1)
{ after(grammarAccess.getGroupingAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelFolding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelFolding__Group__0__Impl
	rule__ModelFolding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelFolding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelFoldingAccess().getEqualsSignGreaterThanSignKeyword_0()); }

	'=>' 

{ after(grammarAccess.getModelFoldingAccess().getEqualsSignGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelFolding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelFolding__Group__1__Impl
	rule__ModelFolding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelFolding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelFoldingAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getModelFoldingAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelFolding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelFolding__Group__2__Impl
	rule__ModelFolding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelFolding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelFoldingAccess().getFoldingsAssignment_2()); }
(rule__ModelFolding__FoldingsAssignment_2)
{ after(grammarAccess.getModelFoldingAccess().getFoldingsAssignment_2()); }
)
(
{ before(grammarAccess.getModelFoldingAccess().getFoldingsAssignment_2()); }
(rule__ModelFolding__FoldingsAssignment_2)*
{ after(grammarAccess.getModelFoldingAccess().getFoldingsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelFolding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelFolding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelFolding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelFoldingAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getModelFoldingAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyFolding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__0__Impl
	rule__PropertyFolding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getDescriptionAssignment_0()); }
(rule__PropertyFolding__DescriptionAssignment_0)?
{ after(grammarAccess.getPropertyFoldingAccess().getDescriptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__1__Impl
	rule__PropertyFolding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getAttributesAssignment_1()); }
(rule__PropertyFolding__AttributesAssignment_1)?
{ after(grammarAccess.getPropertyFoldingAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__2__Impl
	rule__PropertyFolding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getAggregatorAssignment_2()); }
(rule__PropertyFolding__AggregatorAssignment_2)
{ after(grammarAccess.getPropertyFoldingAccess().getAggregatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__3__Impl
	rule__PropertyFolding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getFromAssignment_3()); }
(rule__PropertyFolding__FromAssignment_3)
{ after(grammarAccess.getPropertyFoldingAccess().getFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__4__Impl
	rule__PropertyFolding__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getAlternatives_4()); }
(rule__PropertyFolding__Alternatives_4)
{ after(grammarAccess.getPropertyFoldingAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__5__Impl
	rule__PropertyFolding__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getNameAssignment_5()); }
(rule__PropertyFolding__NameAssignment_5)
{ after(grammarAccess.getPropertyFoldingAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFolding__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyFolding__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getPropertyFoldingAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment_0()); }
(rule__QualifiedName__NameAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment_1_1()); }
(rule__QualifiedName__NameAssignment_1_1)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Models__ListAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelsAccess().getListModelDefinitionParserRuleCall_0()); }
	ruleModelDefinition{ after(grammarAccess.getModelsAccess().getListModelDefinitionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
	ruleDescription{ after(grammarAccess.getModelDefinitionAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getAttributesAttributeListParserRuleCall_1_0()); }
	ruleAttributeList{ after(grammarAccess.getModelDefinitionAccess().getAttributesAttributeListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__ModelAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getModelRecordModelDefinitionParserRuleCall_2_0_0()); }
	ruleRecordModelDefinition{ after(grammarAccess.getModelDefinitionAccess().getModelRecordModelDefinitionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDefinition__ModelAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDefinitionAccess().getModelSummarizeModelDefinitionParserRuleCall_2_1_0()); }
	ruleSummarizeModelDefinition{ after(grammarAccess.getModelDefinitionAccess().getModelSummarizeModelDefinitionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordModelDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getRecordModelDefinitionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordModelDefinition__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordModelDefinitionAccess().getRhsRecordExpressionParserRuleCall_2_0()); }
	ruleRecordExpression{ after(grammarAccess.getRecordModelDefinitionAccess().getRhsRecordExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__TermsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getTermsRecordTermParserRuleCall_0_0()); }
	ruleRecordTerm{ after(grammarAccess.getRecordExpressionAccess().getTermsRecordTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__TermsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getTermsRecordTermParserRuleCall_1_1_0()); }
	ruleRecordTerm{ after(grammarAccess.getRecordExpressionAccess().getTermsRecordTermParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__PropertiesAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getPropertiesPropertyDefinitionParserRuleCall_0_1_0()); }
	rulePropertyDefinition{ after(grammarAccess.getRecordTermAccess().getPropertiesPropertyDefinitionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getReferenceModelReferenceParserRuleCall_1_0()); }
	ruleModelReference{ after(grammarAccess.getRecordTermAccess().getReferenceModelReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getModelReferenceAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
	ruleDescription{ after(grammarAccess.getPropertyDefinitionAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getAttributesAttributeListParserRuleCall_1_0()); }
	ruleAttributeList{ after(grammarAccess.getPropertyDefinitionAccess().getAttributesAttributeListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getPropertyDefinitionAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getTypeTypeEnumRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getPropertyDefinitionAccess().getTypeTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getSummarizeModelDefinitionAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeModelDefinition__RhsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeModelDefinitionAccess().getRhsSummarizeExpressionParserRuleCall_3_0()); }
	ruleSummarizeExpression{ after(grammarAccess.getSummarizeModelDefinitionAccess().getRhsSummarizeExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__TermsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getTermsSummarizeTermParserRuleCall_0_0()); }
	ruleSummarizeTerm{ after(grammarAccess.getSummarizeExpressionAccess().getTermsSummarizeTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeExpression__TermsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeExpressionAccess().getTermsSummarizeTermParserRuleCall_1_1_0()); }
	ruleSummarizeTerm{ after(grammarAccess.getSummarizeExpressionAccess().getTermsSummarizeTermParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getReferenceModelReferenceParserRuleCall_0_0()); }
	ruleModelReference{ after(grammarAccess.getSummarizeTermAccess().getReferenceModelReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__FoldingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getFoldingModelFoldingParserRuleCall_1_0()); }
	ruleModelFolding{ after(grammarAccess.getSummarizeTermAccess().getFoldingModelFoldingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummarizeTerm__GroupingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummarizeTermAccess().getGroupingGroupingParserRuleCall_2_0()); }
	ruleGrouping{ after(grammarAccess.getSummarizeTermAccess().getGroupingGroupingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__AttributesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getAttributesAttributeParserRuleCall_0()); }
	ruleAttribute{ after(grammarAccess.getAttributeListAccess().getAttributesAttributeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ElementsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getElementsAttributeElementListParserRuleCall_2_1_0_0()); }
	ruleAttributeElementList{ after(grammarAccess.getAttributeAccess().getElementsAttributeElementListParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__ElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getElementsAttributeElementParserRuleCall_0_0()); }
	ruleAttributeElement{ after(grammarAccess.getAttributeElementListAccess().getElementsAttributeElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElementList__ElementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementListAccess().getElementsAttributeElementParserRuleCall_1_1_0()); }
	ruleAttributeElement{ after(grammarAccess.getAttributeElementListAccess().getElementsAttributeElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getAttributeElementAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeElement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeElementAccess().getValueAttributeValueParserRuleCall_2_0()); }
	ruleAttributeValue{ after(grammarAccess.getAttributeElementAccess().getValueAttributeValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueAttributeValueArrayParserRuleCall_0_0()); }
	ruleAttributeValueArray{ after(grammarAccess.getAttributeValueAccess().getValueAttributeValueArrayParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeValueAccess().getValueQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueLiteralParserRuleCall_2_0()); }
	ruleLiteral{ after(grammarAccess.getAttributeValueAccess().getValueLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getElementsAttributeValueParserRuleCall_1_0()); }
	ruleAttributeValue{ after(grammarAccess.getAttributeValueArrayAccess().getElementsAttributeValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueArray__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueArrayAccess().getElementsAttributeValueParserRuleCall_2_1_0()); }
	ruleAttributeValue{ after(grammarAccess.getAttributeValueArrayAccess().getElementsAttributeValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getGroupingAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grouping__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingAccess().getNameNameParserRuleCall_2_1_0()); }
	ruleName{ after(grammarAccess.getGroupingAccess().getNameNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelFolding__FoldingsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelFoldingAccess().getFoldingsPropertyFoldingParserRuleCall_2_0()); }
	rulePropertyFolding{ after(grammarAccess.getModelFoldingAccess().getFoldingsPropertyFoldingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
	ruleDescription{ after(grammarAccess.getPropertyFoldingAccess().getDescriptionDescriptionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getAttributesAttributeListParserRuleCall_1_0()); }
	ruleAttributeList{ after(grammarAccess.getPropertyFoldingAccess().getAttributesAttributeListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__AggregatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getAggregatorQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getPropertyFoldingAccess().getAggregatorQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__FromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getFromNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getPropertyFoldingAccess().getFromNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFolding__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFoldingAccess().getNameNameParserRuleCall_5_0()); }
	ruleName{ after(grammarAccess.getPropertyFoldingAccess().getNameNameParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getQualifiedNameAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getQualifiedNameAccess().getNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__StringValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringValueSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralAccess().getStringValueSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__IntValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getLiteralAccess().getIntValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__DecimalValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getDecimalValueDECIMALTerminalRuleCall_2_0()); }
	RULE_DECIMAL{ after(grammarAccess.getLiteralAccess().getDecimalValueDECIMALTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BooleanValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBooleanValueBOOLEANEnumRuleCall_3_0()); }
	ruleBOOLEAN{ after(grammarAccess.getLiteralAccess().getBooleanValueBOOLEANEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NAME_TOKEN : 'a'..'z' ('a'..'z'|'0'..'9')* ('_' ('a'..'z'|'0'..'9')+)*;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\\')|~(('\\'|'"')))* '"';

RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_DECIMAL : ('.' ('0'..'9')+|'0.' ('0'..'9')*|'1'..'9' ('0'..'9')* '.' ('0'..'9')*);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : ('//'|'--') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


