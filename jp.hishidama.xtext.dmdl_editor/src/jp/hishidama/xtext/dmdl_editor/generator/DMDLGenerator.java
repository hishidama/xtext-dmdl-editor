/*
 * first generated by Xtext
 */
package jp.hishidama.xtext.dmdl_editor.generator;

import java.util.HashMap;
import java.util.Map;

import jp.hishidama.eclipse_plugin.asakusafw_wrapper.handler.DMDLAutoErrorCheckHandler;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IWorkspace;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
public class DMDLGenerator implements IGenerator {

	private Map<IProject, Long> timeMap = new HashMap<IProject, Long>();

	private long fullTime;

	public void setFullTime(long fullTime) {
		this.fullTime = fullTime;
	}

	// @Override
	public void doGenerate(Resource resource, IFileSystemAccess fsa) {
		IFile file = getFile(resource);
		if (!shouldCheck(file)) {
			return;
		}

		IProject project = file.getProject();

		DMDLAutoErrorCheckHandler handler = new DMDLAutoErrorCheckHandler();
		handler.execute(project, null);

		timeMap.put(project, System.currentTimeMillis());
	}

	static IFile getFile(Resource resource) {
		try {
			URI uri = resource.getURI();
			IPath path = Path.fromPortableString(uri.toPlatformString(true));

			IWorkspace workspace = ResourcesPlugin.getWorkspace();
			IWorkspaceRoot root = workspace.getRoot();
			return root.getFile(path);
		} catch (Exception e) {
			return null;
		}
	}

	// DMDLのエラーチェックは複数のdmdlファイルを読み込んで実行するので、
	// プロジェクトのクリーンを行った際にはファイル毎に何度も同じエラーチェックをすることになって無駄。
	// なので、ファイルの更新日時と比較して、ファイルが新しい場合だけ行うようにする。
	boolean shouldCheck(IFile file) {
		if (file == null) {
			return false;
		}

		IProject project = file.getProject();
		Long time = timeMap.get(project);
		if (time == null) {
			return true;
		}

		long modify = file.getLocalTimeStamp();
		if (fullTime != 0) {
			modify = fullTime;
		}
		return time <= modify;
	}
}
